spring:
  application:
    name: order-service
  datasource:
    url: jdbc:mysql://localhost:3306/order_service
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: none

# Kafka Properties
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: order-placed
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema:
          registry:
            url: http://127.0.0.1:8085

server:
  port: 8081

inventory:
  service:
    url: http://localhost:8082

# Resilience4j properties
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        register-health-indicator: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        minimum-number-of-calls: 5

  #Resilience4j timeout properties
  timelimiter:
    configs:
      default:
        timeout-duration: 3s

  #Resilience4j retry properties
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  observations:
    key-values:
      application: order-service

  tracing:
    sampling:
      probability: 1.0